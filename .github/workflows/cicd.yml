name: CI/CD

on: [push]

jobs:
  # build:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Cache node_modules
  #       id: cache-node_modules
  #       uses: actions/cache@v3
  #       with:
  #         path: |
  #           node_modules
  #           /home/runner/.cache/Cypress
  #         key: ${{ runner.os }}-node_modules-${{ hashFiles('package-lock.json') }}
  #     - run: npm ci
  #     - run: npm run build

  # test:
  #   # if: github.ref == 'refs/heads/main' 
  #   # permet de choisir une branche 
  #   runs-on: ubuntu-latest
  #   needs: build
  #   # strategy:
  #   #   matrix:
  #   #     browser: [chrome, edge]
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Cache node_modules
  #       id: cache-node_modules
  #       uses: actions/cache@v3
  #       with:
  #         path: |
  #           node_modules
  #           /home/runner/.cache/Cypress
  #         key: ${{ runner.os }}-node_modules-${{ hashFiles('package-lock.json') }}
  #     - name: Cypress run
  #       uses: cypress-io/github-action@v6
  #       with:
  #         install: false
  #         build: npm run build
  #         start: npm run start
  #         browser: chrome
  #     - uses: actions/upload-artifact@v3
  #       if: always()
  #       with:
  #         name: cypress-videos
  #         path: cypress/videos

  deploy:
    runs-on: ubuntu-latest
    # needs: [build, test]
    steps:
        - uses: webfactory/ssh-agent@v0.8.0
          with:
            ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
        - run: | 
            ssh -o StrictHostKeyChecking=no ${{secrets.SSH_USER}}@${{secrets.SSH_HOST}} "\
            ls -la && \
            cd cicd-cours && \
            git pull && \
            sudo docker compose -f docker-compose.yml up -d --build"
            #    pm2 start .. ou pm2 restart all && \
        # - name: setup ssh agent for github
        #   uses: webfactory/ssh-agent@v0.8.0
        #   with:
        #     ssh-private-key: ${{secrets. SSH_PRIVATE_KEY_GIT}}
        #     run:  |
        #       sudo git clone ${{secrets.GIT_REPO}}

            
            
              
        # - name: Setup SSH
        #   uses: MrSquaare/ssh-setup-action@v1
        #   with:
        #         host: github.com
        #         private-key: ${{ secrets.SSH_PRIVATE_KEY }}
        #         passphrase: ${{secrets.SSH_PASSPHRASE}}
        # - name: Setup ssh passphrase
        #   env:
        #     SSH_PRIVATE_KEY_GIT: ${{secrets. SSH_PRIVATE_KEY_GIT}}
        #     SSH_PASSPHRASE: ${{secrets.SSH_PASSPHRASE}}
        #   run: |
        #     sudo git clone ${{secrets.GIT_REPO}}
        #     cd cicd-cours
        #     sudo docker compose -f docker-compose.yml up -d --build
            
               